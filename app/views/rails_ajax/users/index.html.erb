<h2>Rails AJAX</h2>
If you are wanting to do unobtrusive javascript take a look at the jQuery example. I highly recommend it for unobtrusive javascript. If you want to do unobtrusive javascript for prototype you should glance at <%= link_to "lowpro", "http://www.danwebb.net/2006/9/3/low-pro-unobtrusive-scripting-for-prototype" %> and mimic what I did with jQuery, but for lowpro. I didn't bother with a lowpro example, because if you are doing unobtrusive javascript I'm assuming you are using jQuery. This example just uses the built in rails helpers for creating AJAX requests.

<br />
<br />

<% remote_form_for [:rails_ajax, @search] do |f| %>
    <fieldset>
        <legend>Search Users</legend>
        
        <% f.fields_for @search.conditions do |users| %>
            First name keywords:<br />
            <%= users.text_field :first_name_keywords %><br />
            <br />
            
            First name sounds like: (try &quot;bin&quot;, this is a custom condition, checkout config/initializers/searchgasm.rb)<br />
            <%= users.text_field :first_name_sounds_like %><br />
            <br />
            
            Last name keywords:<br />
            <%= users.text_field :last_name_keywords %><br />
            <br />
            
            Email ends with:<br />
            <%= users.text_field :email_ends_with %><br />
            <br />

            <% users.fields_for users.object.orders do |orders| %>
                Has orders with a total greater than:<br />
                $<%= orders.text_field :total_gt %><br />
                <br />
            <% end %>
            
            <% users.fields_for users.object.user_group do |user_group| %>
                Belongs to user group with name that starts with:<br />
                <%= user_group.text_field :name_starts_with %><br />
                <br />
            <% end %>
            <%= f.submit "Search" %>
        <% end %>
    </fieldset>
<% end %>

<div id="users">
  <%= render :partial => "users" %>
</div>
